{"version":3,"sources":["components/Header/Header.jsx","components/Sort/SortSelector-item.js","components/Sort/SortSelector.js","redux/reducers/sortReducer.js","components/Sort/Sort-item.js","redux/reducers/types.js","components/Sort/sortConfig.js","components/Sort/sortDataConfig.js","components/Sort/Sort.jsx","components/Charts/Doughnut.js","components/Map/Map.jsx","utils/pointSorter.js","components/Charts/getGradient.js","components/Charts/HorizontalBarChart.js","components/Charts/CustomChart.js","components/Charts/LineChart.js","components/Charts/ChartSort/ChartSortItem.js","components/Charts/ChartSort/ChartSortConfig.js","components/Charts/ChartSort/ChartSort.js","components/Charts/ChartContainer.js","pages/Data/DataPage.js","pages/404/404.js","App.js","redux/reducers/index.js","redux/store.jsx","index.js","assets/icons/close.svg","assets/icons/right-arrow.svg"],"names":["Header","props","className","src","alt","to","SortSelectorItem","onClick","handleClickItem","id","name","dataIndex","SortSelector","elements","data","map","item","key","initialState","sortToSupplier","sortToClient","sortToProduct","sortToYear","connect","state","sort","makeYearSorting","year","type","payload","makeClientSorting","client","makeSupplierSorting","supplier","makeProductSorting","product","useState","isOpenSelector","setIsOpenSelector","defaultTitle","title","setTitle","closeSVG","sortConfig","sortDataConfig","Sort","objectKeys","Object","keys","index","DoughnutChart","style","options","percent","fromId","toId","points","from","value","curvature","useEffect","element","document","querySelector","remove","anychart","set","array","sortObject","fields","obj","res","f","push","getField","length","result","i","getAllPoints","flag","j","pointSorter","geoData","enabled","useHtml","padding","marker","lat","long","labels","format","connectorSeries","connector","startSize","endSize","fill","stroke","tooltip","onDocumentReady","getElementById","listen","e","visibility","textContent","row","pointIndex","clientX","clientY","left","top","hovered","markers","position","size","arrowRightSVG","Doughnut","datasets","backgroundColor","width","height","circumference","rotation","animation","duration","display","text","zIndex","instance","charts","getGradient","gradient","createElement","getContext","createLinearGradient","addColorStop","HorizontalBarChart","maintainAspectRatio","responsive","legend","scales","yAxes","gridLines","drawBorder","xAxes","CustomChart","chartData","lineHeight","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointRadius","pointBorderWidth","tooltips","chartValues","resultNum","names","Math","random","toFixed","reverse","getRandomArray","LineChart","pointBorderColor","pointBackgroundColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHitRadius","withRouter","clicked","setClick","history","location","pathname","indexOf","classes","classNames","chartSortConfig","ChartSort","tradeFlow","products","imports","exports","console","log","setData","DataPage","NotFoundPage","App","path","exact","component","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","module"],"mappings":"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","file":"static/js/main.fa7a08a8.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport './Header.css'\r\n\r\n\r\nconst Header = props =>{\r\n    return(\r\n        <div className={'header'}>\r\n                <div className=\"logo\"><img src=\"\" alt=\"\"/></div>\r\n                <nav>\r\n                    <Link to=\"/\">Данные</Link>\r\n                    <Link  to=\"/about\">О нас</Link>\r\n                </nav>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\n\r\nconst SortSelectorItem = props =>{\r\n    return(\r\n        <div onClick={()=>props.handleClickItem(props.id,props.name,props.dataIndex)}>{props.name}</div>\r\n    )\r\n}\r\nexport default SortSelectorItem","import React from 'react'\r\nimport SortSelectorItem from \"./SortSelector-item\";\r\n\r\n\r\n\r\nconst SortSelector = props =>{\r\n    const elements = props.data.map(item=>{\r\n        return <SortSelectorItem\r\n            dataIndex={props.dataIndex}\r\n            key={item?.id}\r\n            name={item.name}\r\n            id={item.id}\r\n            handleClickItem={props.handleClickItem}/>\r\n    })\r\n    return(\r\n        <div className={'sort-selector'}>\r\n            {elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortSelector","import {SET_YEAR_SORTING,SET_SUPPLIER_SORTING,SET_PRODUCT_SORTING,SET_CLIENT_SORTING} from './types'\r\n\r\nconst initialState={\r\n        sortToSupplier: -1,\r\n        sortToClient: -1,\r\n        sortToProduct: -1,\r\n        sortToYear: -1\r\n}\r\nexport const sortReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case SET_YEAR_SORTING:\r\n            return {\r\n                ...state,\r\n                sortToYear: action.payload\r\n            }\r\n        case SET_SUPPLIER_SORTING:\r\n            return {\r\n                ...state,\r\n                sortToSupplier: action.payload,\r\n            }\r\n        case SET_PRODUCT_SORTING:\r\n            return {\r\n                ...state,\r\n                sortToProduct: action.payload,\r\n            }\r\n        case SET_CLIENT_SORTING:\r\n            return {\r\n                ...state,\r\n                sortToClient: action.payload,\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n        }\r\n    }\r\n}\r\n\r\nexport const makeYearSorting = year =>{\r\n    return{\r\n        type: SET_YEAR_SORTING,\r\n        payload: year\r\n    }\r\n}\r\nexport const makeProductSorting = product =>{\r\n    return{\r\n        type: SET_PRODUCT_SORTING,\r\n        payload: product\r\n    }\r\n}\r\nexport const makeSupplierSorting = supplier =>{\r\n    return{\r\n        type: SET_SUPPLIER_SORTING,\r\n        payload: supplier\r\n    }\r\n}\r\nexport const makeClientSorting = client =>{\r\n    return{\r\n        type: SET_CLIENT_SORTING,\r\n        payload: client\r\n    }\r\n}\r\n","import React, {useState} from 'react'\r\nimport SortSelector from \"./SortSelector\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    makeClientSorting,\r\n    makeProductSorting,\r\n    makeSupplierSorting,\r\n    makeYearSorting\r\n} from \"../../redux/reducers/sortReducer\";\r\nimport {closeSVG} from \"../../assets\";\r\n\r\n\r\n\r\nconst SortItem = props =>{\r\n    const [isOpenSelector, setIsOpenSelector] = useState(false)\r\n    const [title,setTitle] = useState(props.defaultTitle)\r\n    const handleClickItem = (id,name,dataIndex)=>{\r\n        setIsOpenSelector(false)\r\n        setTitle(name)\r\n        switch(dataIndex){\r\n            case 'year':\r\n                return props.makeYearSorting(id)\r\n            case 'client':\r\n                return props.makeClientSorting(id)\r\n            case 'supplier':\r\n                return props.makeSupplierSorting(id)\r\n            case 'product':\r\n                return props.makeProductSorting(id)\r\n            default:\r\n                return\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"sort-section__export\" >\r\n        <div className=\"sort-section__title\" >\r\n            {props.name}</div>\r\n    <div className=\"sort-section__selector\" >\r\n        <span onClick={()=>setIsOpenSelector(!isOpenSelector)}>{title}</span>\r\n        <div className={'sort-section__delete-btn'}>\r\n            <img src={closeSVG} alt=\"\"\r\n                 onClick={()=>handleClickItem(-1,props.defaultTitle,props.dataIndex)}\r\n            />\r\n        </div>\r\n    </div>\r\n            {isOpenSelector && <SortSelector dataIndex={props.dataIndex} handleClickItem = {handleClickItem} data={props.data}/>}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        sortToSupplier: state.sort.sortToSupplier,\r\n        sortToClient: state.sort.sortToClient,\r\n        sortToProduct: state.sort.sortToProduct,\r\n        sortToYear: state.sort.sortToYear\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{makeYearSorting,makeClientSorting,makeSupplierSorting,makeProductSorting})(SortItem)","export const SET_YEAR_SORTING = 'SET_YEAR_SORTING'\r\nexport const SET_SUPPLIER_SORTING = 'SET_SUPPLIER_SORTING'\r\nexport const SET_PRODUCT_SORTING = 'SET_PRODUCT_SORTING'\r\nexport const SET_CLIENT_SORTING = 'SET_CLIENT_SORTING'","export const sortConfig = [\r\n    {\r\n        dataIndex: 'supplier',\r\n        name: 'Поставщик',\r\n        defaultTitle: 'Все области'\r\n    },\r\n    {\r\n        dataIndex: 'client',\r\n        name: 'Принимающий',\r\n        defaultTitle: 'Все области'\r\n    },\r\n    {\r\n        dataIndex: 'product',\r\n        name: 'Товар',\r\n        defaultTitle: 'Все товары'\r\n    },\r\n    {\r\n        dataIndex: 'year',\r\n        name: 'Год',\r\n        defaultTitle: '2021'\r\n    },\r\n]","export const sortDataConfig = {\r\n    supplier: [\r\n        {id: 0, name: 'Баткенская'},\r\n        {id: 1, name: 'Джалал-Абадская'},\r\n        {id: 2, name: 'Иссык-Кульская'},\r\n        {id: 3, name: 'Нарынская'},\r\n        {id: 4, name: 'Ошская'},\r\n        {id: 5, name: 'Таласская'},\r\n        {id: 6, name: 'Чуйская'},\r\n    ],\r\n    client: [\r\n        {id: 0, name: 'Баткенская'},\r\n        {id: 1, name: 'Джалал-Абадская'},\r\n        {id: 2, name: 'Иссык-Кульская'},\r\n        {id: 3, name: 'Нарынская'},\r\n        {id: 4, name: 'Ошская'},\r\n        {id: 5, name: 'Таласская'},\r\n        {id: 6, name: 'Чуйская'},\r\n    ],\r\n    product: [\r\n        {id: 0, name: 'Картофель'},\r\n        {id: 1, name: 'Говядина'},\r\n        {id: 2, name: 'Баранина'},\r\n        {id: 3, name: 'Лук'},\r\n        {id: 4, name: 'Помидоры'},\r\n        {id: 5, name: 'Огурцы'},\r\n        {id: 6, name: 'Петрушка'},\r\n    ],\r\n    year: [\r\n        {id: 2021, name: 2021},\r\n        {id: 2020, name: 2020},\r\n        {id: 2019, name: 2019},\r\n        {id: 2018, name: 2018},\r\n        {id: 2017, name: 2017}\r\n    ]\r\n}","import React, {useState} from 'react'\r\nimport SortItem from \"./Sort-item\";\r\nimport {sortConfig} from \"./sortConfig\";\r\nimport './Sort.css'\r\nimport {sortDataConfig} from \"./sortDataConfig\";\r\n\r\n\r\nconst Sort = props =>{\r\n    const [data,setData] = useState(sortDataConfig)\r\n    const objectKeys = Object.keys(sortDataConfig)\r\n    const elements = sortConfig.map((item,index)=>{\r\n        if(item.dataIndex === objectKeys[index]) {\r\n            return (\r\n                <SortItem key={index} name={item.name} defaultTitle={item.defaultTitle} dataIndex={item.dataIndex} data={data[objectKeys[index]]}/>\r\n            )\r\n        }\r\n    })\r\n    return(\r\n        <section className=\"sort-section\">\r\n            {elements}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sort","\r\nimport React, {useState} from \"react\";\r\nimport {Doughnut} from \"react-chartjs-2\";\r\nimport './Charts.css'\r\n\r\nconst DoughnutChart = props=>{\r\n    return(\r\n        <div style={props.style}>\r\n        <Doughnut\r\n            data={props.data}\r\n            options={props.options}\r\n        />\r\n        <span className={'chart-percent'}>{props.percent}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Map.css'\r\nimport AnyChart from \"anychart-react\";\r\nimport anychart from 'anychart'\r\nimport {pointSorter} from \"../../utils/pointSorter\";\r\nimport {connect} from \"react-redux\";\r\nimport DoughnutChart from \"../Charts/Doughnut\";\r\nimport {arrowRightSVG} from \"../../assets\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst  Map = (props)=> {\r\n\r\n            const [points,setPoints] = useState([\r\n{fromId: 2, toId: 6, product: 1, year: 2021, points: {points: [42.614290, 76.833688, 42.844110, 74.558424], from: 'Иссык-кульская область', to: 'Чуйская область', product: 'Говядина', value: '$200k'}},\r\n{fromId: 2, toId: 5, product: 1, year: 2021, points: {points: [42.614290, 76.833688, 42.485620, 72.122352], from: 'Иссык-кульская область', to: 'Таласская область', product: 'Говядина', value: '$150k', curvature: 0.50,}},\r\n{fromId: 5, toId: 2, product: 2, year: 2021, points: {points: [42.485620, 72.122352, 42.614290, 76.833688], from: 'Таласская область', to: 'Иссык-кульская область', curvature: -0.30, product: 'Баранина', value: '$142k'}},\r\n{fromId: 4, toId: 5, product: 3, year: 2021, points: {points: [40.386513, 72.992115, 42.485620, 72.122352], from: 'Ошская область', to: 'Таласская область', product: 'Лук', value: '$156k'}},\r\n{fromId: 6, toId: 3, product: 4, year: 2021, points: {points: [42.844110, 74.558424, 41.356819, 75.988367], from: 'Чуйская область', to: 'Нарынская область', product: 'Помидоры', value: '$100k'}},\r\n{fromId: 4, toId: 0, product: 4, year: 2021, points: {points: [40.386513, 72.992115, 40.018286, 70.808747], from: 'Ошская область', to: 'Баткенская область', product: 'Помидоры', value: '$500k'}},\r\n{fromId: 4, toId: 1, product: 4, year: 2021, points: {points: [40.386513, 72.992115, 41.723724, 71.861789], from: 'Ошская область', to: 'Джалал-Абадская область', product: 'Помидоры', curvature: -0.6, value: '$200k'}},\r\n{fromId: 4, toId: 3, product: 0, year: 2021, points: {points: [40.386513, 72.992115, 41.356819, 75.988367], from: 'Ошская область', to: 'Нарынская область', product: 'Картофель', curvature: -0.6, value: '$210k'}},\r\n{fromId: 3, toId: 5, product: 5, year: 2021, points: {points: [41.356819, 75.988367, 42.485620, 72.122352], from: 'Нарынская область', to: 'Таласская область', curvature: -0.75, product: 'Огурцы', value: '$300k'}}\r\n])\r\n\r\n\r\n     useEffect(()=>{\r\n         const element = document.querySelector('.anychart-credits')\r\n         if(element){\r\n             element.remove()\r\n         }\r\n     },[])\r\n\r\n\r\n        let data = anychart.data.set(pointSorter(points, {\r\n            toId: props.sortToClient,\r\n            product: props.sortToProduct,\r\n            fromId: props.sortToSupplier,\r\n            year: props.sortToYear,\r\n        }))\r\n        let map = anychart.map();\r\n\r\n        let regionData = [\r\n            {lat: 42.2, long: 77.933688, name: \"Иссык-Кульская область\"},\r\n            {lat: 42.844110, long: 74, name: \"Чуйская область\"},\r\n            {lat: 40.018286, long: 71.808747, name: \"Баткенская область\"},\r\n            {lat: 41.356819, long: 75.288367, name: \"Нарынская область\"},\r\n            {lat: 39.886513, long: 72.992115, name: \"Ошская область\"},\r\n            {lat: 42.485620, long: 71.622352, name: \"Таласская область\"},\r\n            {lat: 41.747177, long: 71.449557, name: \"Джалал-Абадская область\"},\r\n\r\n        ];\r\n        map.geoData('anychart.maps.kyrgyzstan');\r\n        map.title().enabled(true).useHtml(true).padding([0, 0, 20, 0])\r\n\r\n        map.marker(regionData).labels().format(\"{%name}\")\r\n        let connectorSeries = map\r\n            .title(\"\")\r\n            .connector(data)\r\n            .startSize(5)\r\n            .endSize(0.5)\r\n            .fill(['#F49316', '#3281FF'], 0.5, null, \"round\")\r\n            .stroke(['#F49316', '#3281FF'], 0.5, null, \"round\")\r\n            .curvature(0.4)\r\n\r\n        connectorSeries.tooltip(false)\r\n    anychart.onDocumentReady(function () {\r\n        let tooltip = document.getElementById(\"tooltip\");\r\n\r\n\r\n        connectorSeries\r\n            .listen(\"mouseMove\", (e) => {\r\n                tooltip.style.visibility = \"visible\";\r\n                const product = document.querySelector('.tooltipData-product')\r\n                const to = document.querySelector('.tooltipData-to')\r\n                const from = document.querySelector('.tooltipData-from')\r\n                const value = document.querySelector('.tooltipData-value')\r\n                product.textContent = data.row(e.pointIndex)?.product\r\n                to.textContent = data.row(e.pointIndex)?.to\r\n                from.textContent = data.row(e.pointIndex)?.from\r\n                value.textContent = data.row(e.pointIndex)?.value\r\n                let clientX = e[\"offsetX\"];\r\n                let clientY = e[\"offsetY\"];\r\n                tooltip.style.left = clientX + 20 + \"px\";\r\n                tooltip.style.top = clientY + 10 + \"px\";\r\n            });\r\n\r\n        connectorSeries\r\n            .listen(\"pointMouseOut\", () => tooltip.style.visibility = \"hidden\")\r\n\r\n    })\r\n        connectorSeries\r\n            .hovered()\r\n            .markers()\r\n            .position('100%')\r\n            .size(20)\r\n\r\n        connectorSeries\r\n            .markers()\r\n            .position('100%')\r\n            .size(15)\r\n            .fill('#F4CA16')\r\n\r\n\r\n\r\n\r\n    return (\r\n       // !(mapInstance && connectors) ? <Preloader /> :\r\n            <div className={'map-section'}>\r\n                <div id=\"tooltip\" className=\"custom-tooltip\">\r\n\r\n                    <span id=\"tooltipData-product\" className={'tooltipData-product'}></span>\r\n                    <div className=\"mapTooltipLocation\">\r\n                        <span id=\"tooltipData-from\" className={'tooltipData-from'}></span>\r\n                        <span id=\"tooltipData-to\" className={'tooltipData-to'}></span>\r\n                    </div>\r\n                    <img className={'mapTooltip-arrowRight'} src={arrowRightSVG} alt=\"\"/>\r\n                    <div className=\"tooltipInfo\">\r\n                        <div className=\"tooltipChart\">\r\n                            <DoughnutChart\r\n                                percent={'100%'}\r\n                                data={{\r\n                                    datasets: [{\r\n                                        data: [3500],\r\n                                        backgroundColor: '#F49316',\r\n                                    }],\r\n                                }}\r\n                                style={{\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    position: 'relative',\r\n                                }}\r\n                                options={{\r\n                                    circumference: 4.8,\r\n                                    rotation: 2.3,\r\n                                    animation: {\r\n                                        duration: 0\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <h2 className={'tooltipData-value'}></h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <DoughnutChart percent={'100%'} data={{\r\n                    labels: ['Весь оборот'],\r\n                    datasets: [{\r\n                        data: [5000],\r\n                        backgroundColor: '#3281FF',\r\n                    }],\r\n                }}\r\n                               options={{\r\n                                   title: {\r\n                                       display: true,\r\n                                       text: \"Доля всей торговли\"\r\n                                   },\r\n                                   circumference: 4.8,\r\n                                   rotation: 2.3\r\n                               }}\r\n                               style={{\r\n                                   position: 'absolute',\r\n                                   top: '10%',\r\n                                   left: '-80px',\r\n                                   width: '300px',\r\n                                   height: '300px',\r\n                                   zIndex: 10\r\n                               }}\r\n                />\r\n                <AnyChart\r\n                    instance={map}\r\n                    charts={connectorSeries}\r\n                    id={'map'}\r\n                />\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        sortToSupplier: state.sort.sortToSupplier,\r\n        sortToClient: state.sort.sortToClient,\r\n        sortToProduct: state.sort.sortToProduct,\r\n        sortToYear: state.sort.sortToYear\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Map)","const getAllPoints = (array)=>{\r\n    let result = []\r\n    for (let i = 0; i < array.length; i++) {\r\n        result.push(array[i].points)\r\n    }\r\n    return result\r\n}\r\nconst getField = (obj)=>{\r\n    let res = []\r\n    for(let f in obj){\r\n        if(obj[f]!==-1) {\r\n            res.push(f)\r\n        }\r\n    }\r\n    return res\r\n}\r\nexport const pointSorter = (array,sortObject)=>{\r\n        let fields = getField(sortObject)\r\n        if(fields.length===0){\r\n           return getAllPoints(array)\r\n        }else {\r\n            let result = []\r\n            let flag= []\r\n            for (let i = 0; i < array.length; i++) {\r\n                for (let j = 0; j < fields.length; j++) {\r\n                    if (array[i][fields[j]] === sortObject[fields[j]]) {\r\n                        flag.push('+')\r\n                    }\r\n                }\r\n                if(flag.length===fields.length){\r\n                    result.push(array[i].points)\r\n                    flag=[]\r\n                }else{\r\n                    flag=[]\r\n                }\r\n            }\r\n            return result\r\n        }\r\n\r\n}","export const getGradient = ()=>{\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const gradient = ctx.createLinearGradient(0, 0, 300, 0);\r\n    gradient.addColorStop(0, '#3281FF');\r\n    gradient.addColorStop(1, '#F49316');\r\n    return gradient\r\n}","import React from 'react'\r\nimport {HorizontalBar} from \"react-chartjs-2\";\r\nimport {getGradient} from \"./getGradient\";\r\n\r\n\r\nconst HorizontalBarChart = props=>{\r\n\r\n    const data = {\r\n        labels: props.data.labels,\r\n        datasets: [\r\n            {\r\n                backgroundColor: getGradient(),\r\n                data: props.data.data\r\n            }\r\n        ]\r\n    };\r\n\r\n    const options = {\r\n        maintainAspectRatio : false,\r\n        responsive: true,\r\n        legend:{\r\n            display: false\r\n        },\r\n\r\n        scales: {\r\n            yAxes: [{\r\n\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display: false,\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={'chart-block'}>\r\n            <h2 className={'chart__title'}>Топ 5</h2>\r\n        <HorizontalBar\r\n            data={data}\r\n            options={options}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorizontalBarChart","import React, {useState} from 'react'\r\nimport {Line} from \"react-chartjs-2\";\r\nimport {getGradient} from \"./getGradient\";\r\n\r\n\r\nconst CustomChart = props=>{\r\n\r\n    const chartData ={\r\n        labels: props.data.labels,\r\n        datasets:[{\r\n            fill: false,\r\n            lineHeight: 0.2,\r\n            lineTension: 0.01,\r\n            backgroundColor: getGradient(),\r\n            borderColor: getGradient(),\r\n            borderCapStyle: 'miter',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'bevel',\r\n            pointRadius: 0,\r\n            pointBorderWidth: 0,\r\n            data: props.data.data\r\n        }]\r\n    }\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        tooltips:{\r\n            enabled: false\r\n        },\r\n        legend:{\r\n            display: false\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                display: false,\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display: false,\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n        }\r\n    }\r\n\r\n    const getRandomArray = ()=>{\r\n        let result = [],resultNum\r\n        if(props.type===1){\r\n        while(result.length!==props.data.names.length){\r\n                resultNum =  Math.random() * ( 100 - 1 ) + 1;\r\n                result.push(resultNum.toFixed(1))\r\n           }\r\n           return result.sort().reverse()\r\n        }\r\n           else{\r\n            while(result.length!==props.data.names.length) {\r\n                resultNum = Math.random() * (1 - 20) -20;\r\n                result.push(resultNum.toFixed(1))\r\n                }\r\n                return result.sort().reverse()\r\n            }\r\n        }\r\n    const chartValues = getRandomArray()\r\nconst elements = props.data.names.map((item,index)=>{\r\n    return(\r\n        <div key={index} className={'custom-chart__item'}>\r\n            <div>\r\n            <span className={'custom-chart__item-id'}>{index+1}</span>\r\n            <span className={'custom-chart__item-title'}>{item}</span>\r\n            </div>\r\n            <div className={'custom-chart__item-statistic'}>\r\n            <span className={'custom-chart__item-chart'}>\r\n                <Line data={chartData} options={options}/>\r\n            </span>\r\n                <span>{ chartValues[index]}%</span>\r\n            </div>\r\n\r\n            </div>\r\n    )\r\n})\r\n    return(\r\n        <div className={'custom-chart__block'}>\r\n            <h2 className={'custom-chart__title'}>{props.title}</h2>\r\n            <div className={'custom-chart__item-container'}>\r\n                {elements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomChart","import React from 'react'\r\nimport {Line} from 'react-chartjs-2';\r\nimport {getGradient} from \"./getGradient\";\r\n\r\n\r\nconst LineChart = props =>{\r\n    const data = {\r\n        labels: props.data.labels,\r\n        datasets: [\r\n            {\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#fff',\r\n                borderColor: getGradient(),\r\n                borderCapStyle: 'miter',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'bevel',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: props.data.data\r\n            }\r\n        ]\r\n    };\r\n    const options = {\r\n        maintainAspectRatio : false,\r\n        responsive: true,\r\n        legend:{\r\n            display: false\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n        }\r\n    }\r\n        return (\r\n            <div className={'chart-block'}>\r\n                <h2 className={'chart__title'}>Общая прибыль</h2>\r\n                <Line\r\n                    data={data}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default LineChart","import React, {useEffect, useState} from 'react'\r\nimport classNames from 'classnames'\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst ChartSortItem = props =>{\r\n    const [clicked,setClick] = useState(false)\r\n    const activeRoute =()=>props.history.location.pathname.indexOf(props.to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n            return setClick(true)\r\n        }\r\n        return setClick(false)\r\n\r\n\r\n    },[props.history.location.pathname])\r\n    const classes = classNames({\r\n        'chart-sort-item' : !clicked,\r\n        'chart-sort-item__active' : clicked\r\n    })\r\n    return(\r\n        <span key={props.id} className={ classes }\r\n              onClick={()=>{\r\n                  setClick(!clicked)\r\n                  props.history.push(props.to)\r\n              }}>{props.name}</span>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChartSortItem)","export const chartSortConfig = [\r\n    {\r\n        to: '/trade-flow',\r\n        name: 'Товарооборот',\r\n    },\r\n    {\r\n        to: '/products',\r\n        name: 'Товары',\r\n\r\n    },\r\n    {\r\n        to: '/provide',\r\n        name: 'Поставка',\r\n\r\n    },\r\n    {\r\n        to: '/client',\r\n        name: 'Прием',\r\n\r\n    },\r\n\r\n]","import React, {useState} from 'react'\r\nimport ChartSortItem from \"./ChartSortItem\";\r\nimport {chartSortConfig} from \"./ChartSortConfig\";\r\n\r\n\r\n\r\nconst ChartSort = ()=>{\r\n    const elements = chartSortConfig.map((item,index)=> <ChartSortItem key={index} name={item.name}  to={item.to} id={index}/>)\r\n    return(\r\n        <div className={'chart-sort'}>\r\n            {elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartSort","import React, {useEffect, useState} from 'react'\r\nimport HorizontalBarChart from \"./HorizontalBarChart\";\r\nimport CustomChart from \"./CustomChart\";\r\nimport './Charts.css'\r\nimport LineChart from \"./LineChart\";\r\nimport ChartSort from \"./ChartSort/ChartSort\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst ChartContainer = props=>{\r\n    const tradeFlow = [\r\n        {labels: [1, 1, 1, 1,1, 1, 1],names:['Чуйская', 'Нарынская', 'Иссык-кульская', 'Таласская', 'Ошская'], data: [20,10,40,45,50,54,100]},\r\n        {labels: ['Чуйская', 'Нарынская', 'Иссык-кульская', 'Таласская', 'Ошская'], data: [85, 75, 70, 65, 56, 55, 40]},\r\n        {labels: ['2017', '2018', '2019', '2020', '2021'], data: [65, 59, 80, 81, 56, 55, 40]},\r\n    ]\r\n    const products = [\r\n        {labels: [1, 1, 1, 1,1, 1, 1],names:['Картофель', 'Говядина', 'Баранина', 'Лук', 'Помидоры'], data: [50,100,40,45,50,54,30]},\r\n        {labels: ['Картофель', 'Говядина', 'Баранина', 'Лук', 'Помидоры'], data: [85, 75, 70, 65, 56]},\r\n        {labels: ['2017', '2018', '2019', '2020', '2021'], data: [65, 59, 80, 81, 56 ]},\r\n    ]\r\n    const imports = [\r\n        {labels: [1, 1, 1, 1,1, 1, 1], names:['Чуйская', 'Нарынская', 'Иссык-кульская', 'Таласская', 'Ошская'],data: [66,55,46,100,50,54,60]},\r\n        {labels: ['Ошская', 'Нарынская', 'Таласская', 'Иссык-кульская', 'Чуйская'], data: [85, 75, 70, 65, 56, 55, 40]},\r\n        {labels: ['2017', '2018', '2019', '2020', '2021'], data: [65, 59, 80, 81, 56, 55, 40]},\r\n    ]\r\n    const exports = [\r\n        {labels: [1, 1, 1, 1,1, 1, 1],names:['Чуйская', 'Нарынская', 'Иссык-кульская', 'Таласская', 'Ошская'], data: [55,99,12,67,23,30,80]},\r\n        {labels: ['Иссык-кульская', 'Нарынская', 'Чуйская', 'Таласская', 'Ошская'], data: [85, 75, 70, 65, 56, 55, 40]},\r\n        {labels: ['2017', '2018', '2019', '2020', '2021'], data: [65, 59, 80, 81, 56, 55, 40]},\r\n    ]\r\n    console.log(props.history.location.pathname)\r\n    const [data,setData]=useState(tradeFlow)\r\n    useEffect(()=>{\r\n        const route = props.history.location.pathname\r\n        switch (route) {\r\n            case '/trade-flow': setData(tradeFlow);break;\r\n            case '/': setData(tradeFlow);break;\r\n            case '/products' : setData(products);break;\r\n            case '/client' : setData(imports);break;\r\n            case '/provide' : setData(exports);break;\r\n            default: setData(tradeFlow)\r\n        }\r\n    },[props.history.location.pathname])\r\n    return(\r\n        <>\r\n            <div className={'chart-container'}>\r\n            <ChartSort />\r\n        <div className={'chart-container-statistic'}>\r\n            <LineChart data={data[2]}/>\r\n            <HorizontalBarChart data={data[1]}/>\r\n            <CustomChart data={data[0]} title={'Быстрорастущие'} type={1}/>\r\n            <CustomChart data={data[0]} title={'Наименеерастущие'} type={0}/>\r\n        </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChartContainer)","import React from 'react'\r\nimport Header from \"../../components/Header/Header\";\r\nimport Sort from \"../../components/Sort/Sort\";\r\nimport Map from \"../../components/Map/Map\";\r\nimport ChartContainer from \"../../components/Charts/ChartContainer\";\r\n\r\n\r\n\r\nconst DataPage = props =>{\r\n    return(\r\n        <>\r\n            <Header />\r\n            <Sort />\r\n            <Map />\r\n            <ChartContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataPage","import React from 'react'\r\nimport './404.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport Header from \"../../components/Header/Header\";\r\n\r\n\r\nconst NotFoundPage = props =>{\r\n    return(\r\n        <section className=\"page_404\">\r\n            <Header />\r\n                            <div className=\"four_zero_four_bg\">\r\n                                <h1 className=\"text-center \">404</h1>\r\n                            </div>\r\n                            <div className=\"contant_box_404\">\r\n\r\n                                <p>Страница не найдена, либо находится в разработке</p>\r\n\r\n                                <Link to={'/'} className=\"link_404\">На главную</Link>\r\n                            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport './App.css'\r\nimport DataPage from \"./pages/Data/DataPage\";\r\nimport NotFoundPage from \"./pages/404/404\";\r\n\r\nconst App = props =>{\r\n    return(\r\n      <Switch>\r\n          <Route path={[\"/\", \"/trade-flow\", \"/products\", \"/provide\", \"/client\"]} exact component={DataPage}/>\r\n          <Route path={'*'} exact  component={NotFoundPage} />\r\n      </Switch>\r\n    )\r\n}\r\nexport default App","import { combineReducers } from \"redux\";\r\nimport {sortReducer} from \"./sortReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    sort: sortReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from 'redux-thunk'\r\nimport {rootReducer} from \"./reducers/index\";\r\n\r\n\r\nlet store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk,\r\n        ),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </Provider>,\r\ndocument.getElementById('root')\r\n);\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/close.107181e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.53540829.svg\";"],"sourceRoot":""}